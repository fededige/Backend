version: '3'
services:

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - project-network
    restart: unless-stopped
    volumes:
      - type: volume
        source: data-rabbitmq
        target: /var/lib/rabbitmq

  gateway:
    build: apiGateway/.
    image: project-gateway
    container_name: gateway
    ports:
      - "8080:8080"
    depends_on:
      - rabbitmq
    networks:
      - project-network
    environment:
      - CATALOG_HOST=catalog
      - CATALOG_PORT=8080

  db-catalog:
    container_name: db-catalog
    image: "postgres"
    networks:
      - project-network
    environment:
      POSTGRES_DB: project-catalog
      POSTGRES_USER: catalog
      POSTGRES_PASSWORD: catalog
    restart: unless-stopped
    volumes:
      - type: volume
        source: data-db-catalog
        target: /data
        volume:
          nocopy: true

  catalog:
    build: catalog/.
    image: project-catalog
    container_name: prog-catalog_c
    environment:
      POSTGRES_DB_HOST: db-catalog
      API_GATEWAY_HOST: api-gateway
      RABBITMQ_HOST: rabbitmq
    depends_on:
      - db-catalog
      - rabbitmq
    networks:
      - project-network

networks:
  project-network:

volumes:
  data-rabbitmq:
  data-db-catalog:


# docker-compose build && docker-compose up
